name: 构建发布版本 (PyInstaller)

on:
  push:
    tags:
      - 'v*'  # 当推送v开头的标签时触发，例如 v1.0.0
  workflow_dispatch:  # 允许手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: 优化PyInstaller配置
      run: |
        # 确保spec文件存在并包含优化配置
        if (!(Test-Path build_pyinstaller.spec)) {
          Write-Error "build_pyinstaller.spec not found"
          exit 1
        }
      shell: pwsh
    
    - name: 使用PyInstaller构建
      run: |
        pyinstaller build_pyinstaller.spec --clean --noconfirm
      shell: pwsh
    
    - name: 创建发布包
      run: |
        cd dist
        Compress-Archive -Path stt -DestinationPath stt-windows-x64.zip
    
    - name: 获取版本信息
      id: get_version
      run: |
        $version = (Get-Content version.json | ConvertFrom-Json).version
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh
    
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: stt-windows-pyinstaller
        path: dist/stt-windows-x64.zip
        retention-days: 30
    
    - name: 创建GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/stt-windows-x64.zip
        body: |
          ## 📦 自动构建版本 ${{ steps.get_version.outputs.VERSION }}
          
          ### 构建方式
          - 使用 PyInstaller 打包
          - Python 3.11
          - Windows x64
          
          ### 使用说明
          1. 下载 `stt-windows-x64.zip`
          2. 解压到任意目录
          3. 运行 `stt.exe` 启动程序
          
          ### 注意事项
          - 首次运行会自动下载模型文件
          - 请确保有足够的磁盘空间
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

