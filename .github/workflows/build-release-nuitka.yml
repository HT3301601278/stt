name: 构建发布版本 (Nuitka)

on:
  workflow_dispatch:  # 仅手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka ordered-set zstandard
    
    - name: 安装MSVC编译器
      uses: microsoft/setup-msbuild@v2
    
    - name: 使用Nuitka构建
      run: |
        python -m nuitka `
          --standalone `
          --windows-console-mode=force `
          --assume-yes-for-downloads `
          --enable-plugin=anti-bloat `
          --include-package=torch `
          --include-package=faster_whisper `
          --include-package=flask `
          --include-package=gevent `
          --include-package=stslib `
          --include-data-dir=templates=templates `
          --include-data-dir=static=static `
          --include-data-file=set.ini=set.ini `
          --include-data-file=version.json=version.json `
          --nofollow-import-to=matplotlib `
          --nofollow-import-to=scipy `
          --nofollow-import-to=pandas `
          --nofollow-import-to=numpy.distutils `
          --nofollow-import-to=jupyter `
          --nofollow-import-to=notebook `
          --nofollow-import-to=IPython `
          --nofollow-import-to=tkinter `
          --nofollow-import-to=PyQt5 `
          --nofollow-import-to=PyQt6 `
          --nofollow-import-to=PySide2 `
          --nofollow-import-to=PySide6 `
          --nofollow-import-to=pytest `
          --nofollow-import-to=unittest `
          --nofollow-import-to=setuptools `
          --nofollow-import-to=pip `
          --nofollow-import-to=wheel `
          --nofollow-import-to=distutils `
          --remove-output `
          --output-dir=build `
          start.py
    
    - name: 创建发布目录结构
      run: |
        New-Item -ItemType Directory -Force -Path dist/stt
        # 复制Nuitka生成的standalone文件夹内容
        Copy-Item -Recurse build/start.dist/* dist/stt/
        # 创建必要的目录
        New-Item -ItemType Directory -Force -Path dist/stt/models
        New-Item -ItemType Directory -Force -Path dist/stt/upload
        # 复制文档文件
        if (Test-Path README.md) { Copy-Item README.md dist/stt/ }
        if (Test-Path LICENSE) { Copy-Item LICENSE dist/stt/ }
      shell: pwsh
    
    - name: 创建发布包
      run: |
        cd dist
        Compress-Archive -Path stt -DestinationPath stt-windows-x64-nuitka.zip
    
    - name: 获取版本信息
      id: get_version
      run: |
        $version = (Get-Content version.json | ConvertFrom-Json).version
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh
    
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: stt-windows-nuitka
        path: dist/stt-windows-x64-nuitka.zip
        retention-days: 30
    
    - name: 创建GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/stt-windows-x64-nuitka.zip
        body: |
          ## 📦 自动构建版本 ${{ steps.get_version.outputs.VERSION }}
          
          ### 构建方式
          - 使用 Nuitka 编译打包
          - Python 3.11
          - Windows x64
          
          ### 使用说明
          1. 下载 `stt-windows-x64-nuitka.zip`
          2. 解压到任意目录
          3. 运行 `stt.exe` 启动程序
          
          ### 注意事项
          - 首次运行会自动下载模型文件
          - 请确保有足够的磁盘空间
          - Nuitka版本性能更优
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
